#ifndef $OUM
#define $OUM 0

#include<dl/iuom>
#include<iostream>
using namespace std;
namespace inventory
{
 namespace dataLayer
 {
  class UnitOfMeasurement:public abc::IUnitOfMeasurement
  {
   private:
   int code;
   string title;

   public:
   UnitOfMeasurement();
   UnitOfMeasurement(int,string);
   UnitOfMeasurement(const UnitOfMeasurement&);
   virtual ~UnitOfMeasurement();
   void setCode(int);
   int getCode() const;
   void setTitle(string);
   string getTitle() const;
   IUnitOfMeasurement& operator=(const IUnitOfMeasurement&);
   int operator==(const IUnitOfMeasurement&);
   int operator!=(const IUnitOfMeasurement&);
   int operator>(const IUnitOfMeasurement&);
   int operator>=(const IUnitOfMeasurement&);
   int operator<(const IUnitOfMeasurement&);
   int operator<=(const IUnitOfMeasurement&);   
  };
 }
}



#endif